// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
 
import "./Erc20.sol";

contract ERC20token is IERC20{
  uint public override totalsupply; 
mapping(address => uint) public override balanceof;
mapping(address => mapping(address => uint)) public override allowance; 
string public name = "tech4dev";
string public symbol = "T4D";
uint public decimals = 18;

//transfer function gives room to transfer token to recipient
function transfer(address recipient, uint amount) external override returns(bool){
  balanceof[msg.sender] -= amount;//comprises of three different methods= method 1
  //balanceof[msg.sender] = balanceof[msg.sender] - amount; method 2
  //balanceof[msg.sender] --; method 3
  balanceof[recipient] += amount;  

emit Transfer(msg.sender, recipient, amount);
  return true;
}
//approve function works together with allowance
function approve(address spender, uint amount) external override returns(bool){
  allowance[msg.sender] [spender] = amount;//sender allows spender to use some token

  emit Approval(msg.sender, spender, amount);//emit enables approval to the spender
  return true;
}
//transferfrom function transfer's token from sender to recipient
function transferfrom(address sender, address recipient, uint amount) external override returns(bool){
  allowance[sender] [msg.sender] -= amount;//deduct token from the spender's amount
  balanceof[sender] -=amount;//deduct inputed amount from the sender's balance
  balanceof[recipient] += amount;//adds inputed amount to the recipient's balance
  emit Transfer(sender, recipient, amount);//enables event approval
  return true;

}
//function mint means to creat an inputed token
function mint(uint amount) public{
  balanceof[msg.sender] += amount; //add the inputed amount to the caller's balance
  totalsupply += amount;  //increase total supply by the amount inputed

  emit Transfer(address(0), msg.sender, amount);//enables creation of address to the caller
}
//function burn subtracts an inputed amount of token from total supply
function burn(uint amount) public{
  balanceof[msg.sender] -= amount;//deducts inputed amount from the owner's balance
  totalsupply -= amount;//decreases totalsupply of the amount inputed
  
  emit Transfer(address(0), msg.sender, amount);

}


}



